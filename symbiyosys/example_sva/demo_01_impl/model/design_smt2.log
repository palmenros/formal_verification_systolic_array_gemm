
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite -- YosysHQ Edition [202411050908]     |
 |  Copyright (C) 2012 - 2024 YosysHQ GmbH                                    |
 |  For support, please contact support@yosyshq.com                           |
 \----------------------------------------------------------------------------/
 Yosys 0.47 (git sha1 647d61dd9, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \demo_01_impl
Used module:     \seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111)
Used module:     \seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111)
Used module:     \seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111)

2.2. Analyzing design hierarchy..
Top module:  \demo_01_impl
Used module:     \seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111)
Used module:     \seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111)
Used module:     \seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111)
Removed 0 unused modules.
Module demo_01_impl directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111) ===

   Number of wires:                 44
   Number of wire bits:            144
   Number of public wires:           7
   Number of public wire bits:      76
   Number of ports:                  2
   Number of port bits:              2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $add                            1
     $anyseq                         1
     $assume                         1
     $eq                            28
     $ff                             1
     $mux                            2
     $not                            2
     $pmux                           1
     $reduce_or                      4
     $shr                            1
     $sub                            1

=== seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111) ===

   Number of wires:                 44
   Number of wire bits:            144
   Number of public wires:           7
   Number of public wire bits:      76
   Number of ports:                  2
   Number of port bits:              2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $add                            1
     $anyseq                         1
     $assume                         1
     $eq                            28
     $ff                             1
     $mux                            2
     $not                            2
     $pmux                           1
     $reduce_or                      4
     $shr                            1
     $sub                            1

=== seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111) ===

   Number of wires:                 44
   Number of wire bits:            144
   Number of public wires:           7
   Number of public wire bits:      76
   Number of ports:                  2
   Number of port bits:              2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 43
     $add                            1
     $anyseq                         1
     $assume                         1
     $eq                            28
     $ff                             1
     $mux                            2
     $not                            2
     $pmux                           1
     $reduce_or                      4
     $shr                            1
     $sub                            1

=== demo_01_impl ===

   Number of wires:                 16
   Number of wire bits:             16
   Number of public wires:           4
   Number of public wire bits:       4
   Number of ports:                  1
   Number of port bits:              1
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 17
     $assert                         1
     $assume                         1
     $eq                             1
     $ff                             3
     $mux                            6
     $not                            2
     seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111)      1
     seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111)      1
     seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111)      1

=== design hierarchy ===

   demo_01_impl                      1
     seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111)      1
     seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111)      1
     seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111)      1

   Number of wires:                148
   Number of wire bits:            448
   Number of public wires:          25
   Number of public wire bits:     232
   Number of ports:                  7
   Number of port bits:              7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $add                            3
     $anyseq                         3
     $assert                         1
     $assume                         4
     $eq                            85
     $ff                             6
     $mux                           12
     $not                            8
     $pmux                           3
     $reduce_or                     12
     $shr                            3
     $sub                            3

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module seq(seq=1024'b010110101011111010111110101111101011111010111110010110101011111010111110101111101011111001011010101111101011111010111110101111101011111010111110101111101011111).
Creating SMT-LIBv2 representation of module seq(seq=1024'b0101111100101101001011010101111101011111010111110010110101011111010111110101111100101101010111110101111101011111010111110101111101011111001011010101111101011111).
Creating SMT-LIBv2 representation of module seq(seq=1024'b0101111101011111001011010010110101011111010111110010110101011111010111110101111101011111010111110101111101011111010111110101111101011111001011010101111101011111).
Creating SMT-LIBv2 representation of module demo_01_impl.

End of script. Logfile hash: 904fcdbc98, CPU: user 0.01s system 0.01s, MEM: 26.88 MB peak
Yosys 0.47 (git sha1 647d61dd9, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 66% 2x write_smt2 (0 sec), 25% 2x read_ilang (0 sec), ...
